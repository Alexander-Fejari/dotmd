generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String
  email         String        @unique
  emailVerified Boolean       @default(false)
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  sessions      Session[]     @relation("UserSessions")
  repoAccounts  repoAccount[] @relation("UserRepoAccounts")

  @@map("user")
}

model Session {
  id                    String    @id @default(uuid())
  userId                String
  user                  User      @relation("UserSessions", fields: [userId], references: [id], onDelete: Cascade)
  expiresAt             DateTime
  token                 String    @unique
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  ipAddress             String?
  userAgent             String?
  accessToken           String?
  accessTokenExpiresAt  DateTime?
  refreshToken          String?
  refreshTokenExpiresAt DateTime?

  @@map("session")
}

model repoAccount {
  id                    String    @id @default(uuid())
  accountId             String // Ex. ID GitHub/GitLab
  providerId            String // Ex. "github", "gitlab"
  userId                String
  user                  User      @relation("UserRepoAccounts", fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String? // Ex. "repo"
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("repo_account")
}
